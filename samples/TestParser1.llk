

//.............................................................................

LL (2);

attribute_block
	: '[' attribute_list ']'
	;

attribute_list
	: attribute (',' attribute)*
	;

attribute
	: EToken_Identifier 
		{
			printf ("attribute %s\n", $1.m_Data.m_String);
		}
	| epsilon
	;

//.............................................................................
	
Includes
{
	#include "TestLexer.h"
} 

OpenNamespace
{.
namespace parse_test {
.}

CloseNamespace
{.
} // namespace parse_test {
.}

//.............................................................................
 

//.............................................................................

LL (2);

global
	: if (qualified_label_resolver) qualified_label
	| if (qualified_method_resolver) qualified_method
	| simple_qualified_name
	;

qualified_name
	: EToken_Identifier $a
		{
			printf ("%s", $a.m_Data.m_String);
		}
	  ('.' EToken_Identifier $b
		{
			printf (".%s", $b.m_Data.m_String);
		}	
	  )
	;

qualified_simple_name
	enter
	{
		printf ("simple ");
	}
	: qualified_name ';'
		{
			printf (";\n");
		}	
	;	

qualified_method
	enter
	{
		printf ("method ");
	}
	: qualified_name '(' ')'
		{
			printf (" ()\n");
		}	
	;	

qualified_label
	enter
	{
		printf ("label ");
	}
	: qualified_name ':'
		{
			printf (":\n");
		}	
	;	

qualified_label_resolver
	: EToken_Identifier ('.' EToken_Identifier) ':'
	;

qualified_method_resolver
	: EToken_Identifier ('.' EToken_Identifier) '(' ')'
	;

//.............................................................................
